name: deploy-test
on:
  push:
    branches:
      # - feat/ci
      - main
  workflow_dispatch: {}
env:
  NODE_ENV: ci
  CONTACTS_YML: ${{ vars.CONTACTS_YML }}
jobs:
  deploy-test:
    name: Deploy CDK stacks to the test environment
    runs-on: ubuntu-latest
    env:
      NODE_ENV: "ci"
    environment: Test
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ap-southeast-2
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: CDK synth
        run: npx cdk synth --app "npx ts-node src/main.ts" --output "cdk.out" league-lobster-text-reminders-test
      - name: CDK deploy
        run: npx cdk deploy --app "cdk.out" --require-approval never league-lobster-text-reminders-test
  deploy-prod:
    name: Deploy CDK stacks to Production
    runs-on: ubuntu-latest
    needs: deploy-test
    environment: Production
    env:
      NODE_ENV: "prod"
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ap-southeast-2
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: CDK synth
        run: npx cdk synth --app "npx ts-node src/main.ts" --output "cdk.out"
      - name: CDK deploy
        run: npx cdk deploy --all --app "cdk.out" --require-approval never
